From 1f49eeec80efcffb7f808cbd4830dab66aefc62f Mon Sep 17 00:00:00 2001
From: Vishesh Handa <me@vhanda.in>
Date: Fri, 28 Mar 2014 10:33:25 +0100
Subject: [PATCH 08/48] BasicIndexingTest: Improve debug messages for io usage

---
 src/file/tests/basicindexingqueuetest.cpp | 29 ++++++++++++++++++++++++-----
 1 file changed, 24 insertions(+), 5 deletions(-)

diff --git a/src/file/tests/basicindexingqueuetest.cpp b/src/file/tests/basicindexingqueuetest.cpp
index 60fbc30..bea8bcb 100644
--- a/src/file/tests/basicindexingqueuetest.cpp
+++ b/src/file/tests/basicindexingqueuetest.cpp
@@ -65,18 +65,37 @@ int main(int argc, char** argv)
     QTextStream fs(&file);
     QString str = fs.readAll();
 
+    qDebug() << "------- IO ---------";
     QTextStream stream(&str);
     while (!stream.atEnd()) {
         QString str = stream.readLine();
-        if (str.startsWith("rchar")) {
-            ulong amt = str.mid(QString("rchar: ").size()).toULong();
+
+        QString rchar("rchar: ");
+        if (str.startsWith(rchar)) {
+            ulong amt = str.mid(rchar.size()).toULong();
             qDebug() << "Read:" << amt / 1024  << "kb";
         }
-        if (str.startsWith("wchar")) {
-            ulong amt = str.mid(QString("wchar: ").size()).toULong();
-            qDebug() << "Written:" << amt / 1024  << "kb";
+
+        QString wchar("wchar: ");
+        if (str.startsWith(wchar)) {
+            ulong amt = str.mid(wchar.size()).toULong();
+            qDebug() << "Write:" << amt / 1024  << "kb";
+        }
+
+        QString read("read_bytes: ");
+        if (str.startsWith(read)) {
+            ulong amt = str.mid(read.size()).toULong();
+            qDebug() << "Actual Reads:" << amt / 1024  << "kb";
+        }
+
+        QString write("write_bytes: ");
+        if (str.startsWith(write)) {
+            ulong amt = str.mid(write.size()).toULong();
+            qDebug() << "Actual Writes:" << amt / 1024  << "kb";
         }
     }
+    qDebug() << "\nThe actual read/writes may be 0 because of an existing"
+             << "cache and /tmp being memory mapped";
 
     return ret;
 }
-- 
1.9.1

