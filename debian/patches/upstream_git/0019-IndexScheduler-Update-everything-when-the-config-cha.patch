From a200834ac5461c4f7c914c4438fcfe91c8b245ea Mon Sep 17 00:00:00 2001
From: Vishesh Handa <me@vhanda.in>
Date: Sat, 29 Mar 2014 17:17:51 +0100
Subject: [PATCH 19/56] IndexScheduler: Update everything when the config
 changes

During the nepomuk days doing an update was very expensive and we
therefore tried to update the minimum possible. This was hard to do and
was not perfect.

With Baloo we're fast enough to do a full scan on config changes.
Additionally the configuration does not really change very often.
---
 src/file/indexscheduler.cpp | 40 ++--------------------------------------
 src/file/indexscheduler.h   |  4 +---
 2 files changed, 3 insertions(+), 41 deletions(-)

diff --git a/src/file/indexscheduler.cpp b/src/file/indexscheduler.cpp
index 3f9a261..ce4294f 100644
--- a/src/file/indexscheduler.cpp
+++ b/src/file/indexscheduler.cpp
@@ -40,16 +40,7 @@ IndexScheduler::IndexScheduler(Database* db, FileIndexerConfig* config, QObject*
     , m_db(db)
 {
     Q_ASSERT(m_config);
-    connect(m_config, SIGNAL(includeFolderListChanged(QStringList,QStringList)),
-            this, SLOT(slotIncludeFolderListChanged(QStringList,QStringList)));
-    connect(m_config, SIGNAL(excludeFolderListChanged(QStringList,QStringList)),
-            this, SLOT(slotExcludeFolderListChanged(QStringList,QStringList)));
-
-    // FIXME: What if both the signals are emitted?
-    connect(m_config, SIGNAL(fileExcludeFiltersChanged()),
-            this, SLOT(slotConfigFiltersChanged()));
-    connect(m_config, SIGNAL(mimeTypeFiltersChanged()),
-            this, SLOT(slotConfigFiltersChanged()));
+    connect(m_config, SIGNAL(configChanged()), this, SLOT(slotConfigChanged()));
 
     // Stop indexing when a device is unmounted
     // RemovableMediaCache* cache = new RemovableMediaCache(this);
@@ -201,34 +192,7 @@ void IndexScheduler::queueAllFoldersForUpdate(bool forceUpdate)
 }
 
 
-void IndexScheduler::slotIncludeFolderListChanged(const QStringList& added, const QStringList& removed)
-{
-    //Index the folders added to the include list, clear the folders removed from it
-    addClearFolders(added, removed);
-}
-
-void IndexScheduler::slotExcludeFolderListChanged(const QStringList& added, const QStringList& removed)
-{
-    //Clear the folders added to the exclude list, index the folders removed from it
-    addClearFolders(removed, added);
-}
-
-//Index the folders in add, clear the folders in clear
-void IndexScheduler::addClearFolders(const QStringList& add, const QStringList& clear)
-{
-    kDebug() << "To index: " << add << "To clear: " << clear;
-    Q_FOREACH (const QString& path, clear) {
-        m_basicIQ->clear(path);
-        m_fileIQ->clear();
-    }
-
-    Q_FOREACH (const QString &path, add) {
-        m_basicIQ->enqueue(FileMapping(path), UpdateRecursive);
-    }
-    slotScheduleIndexing();
-}
-
-void IndexScheduler::slotConfigFiltersChanged()
+void IndexScheduler::slotConfigChanged()
 {
     // We need to this - there is no way to avoid it
     m_basicIQ->clear();
diff --git a/src/file/indexscheduler.h b/src/file/indexscheduler.h
index c20d7dc..73db5e0 100644
--- a/src/file/indexscheduler.h
+++ b/src/file/indexscheduler.h
@@ -117,9 +117,7 @@ Q_SIGNALS:
     void statusStringChanged();
 private Q_SLOTS:
     // Config
-    void slotConfigFiltersChanged();
-    void slotIncludeFolderListChanged(const QStringList& added, const QStringList& removed);
-    void slotExcludeFolderListChanged(const QStringList& added, const QStringList& removed);
+    void slotConfigChanged();
 
     void slotStartedIndexing();
     void slotFinishedIndexing();
-- 
1.9.1

