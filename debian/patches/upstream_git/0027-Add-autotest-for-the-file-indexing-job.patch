From f453048fd0e830f8b94da06c1ab91805fd067499 Mon Sep 17 00:00:00 2001
From: Vishesh Handa <me@vhanda.in>
Date: Tue, 1 Apr 2014 15:22:42 +0200
Subject: [PATCH 27/48] Add autotest for the file indexing job

We need to create a fake baloo_file_extractor process for this since
that is what the FileIndexingJob calls.
---
 src/file/autotest/CMakeLists.txt                   |  3 +-
 src/file/autotest/fileindexingjob/CMakeLists.txt   | 19 ++++++
 src/file/autotest/fileindexingjob/extractor.cpp    | 75 ++++++++++++++++++++++
 .../fileindexingjob/fileindexingjobtest.cpp        | 70 ++++++++++++++++++++
 .../autotest/fileindexingjob/fileindexingjobtest.h | 40 ++++++++++++
 5 files changed, 205 insertions(+), 2 deletions(-)
 create mode 100644 src/file/autotest/fileindexingjob/CMakeLists.txt
 create mode 100644 src/file/autotest/fileindexingjob/extractor.cpp
 create mode 100644 src/file/autotest/fileindexingjob/fileindexingjobtest.cpp
 create mode 100644 src/file/autotest/fileindexingjob/fileindexingjobtest.h

diff --git a/src/file/autotest/CMakeLists.txt b/src/file/autotest/CMakeLists.txt
index bd1f1b3..a54736e 100644
--- a/src/file/autotest/CMakeLists.txt
+++ b/src/file/autotest/CMakeLists.txt
@@ -1,7 +1,5 @@
 project(filewatch_tests)
 
-set( EXECUTABLE_OUTPUT_PATH ${CMAKE_CURRENT_BINARY_DIR} )
-
 if(CMAKE_SYSTEM_NAME MATCHES "Linux")
   set(kinotifytest_SRC kinotifytest.cpp ../kinotify.cpp)
   kde4_add_unit_test(kinotifytest TESTNAME nepomuk-kinotifytest NOGUI ${kinotifytest_SRC})
@@ -95,3 +93,4 @@ target_link_libraries(basicindexingqueuetest
   balooxapian
 )
 
+add_subdirectory(fileindexingjob)
diff --git a/src/file/autotest/fileindexingjob/CMakeLists.txt b/src/file/autotest/fileindexingjob/CMakeLists.txt
new file mode 100644
index 0000000..811ed30
--- /dev/null
+++ b/src/file/autotest/fileindexingjob/CMakeLists.txt
@@ -0,0 +1,19 @@
+add_executable(baloo_file_extractor_dummy extractor.cpp)
+set_target_properties(baloo_file_extractor_dummy
+    PROPERTIES OUTPUT_NAME baloo_file_extractor
+)
+
+target_link_libraries(baloo_file_extractor_dummy
+  ${KDE4_KDECORE_LIBS}
+)
+
+add_definitions("-DBALOO_TEMP_PATH=\\\"${CMAKE_CURRENT_BINARY_DIR}\\\"")
+kde4_add_unit_test(fileindexingjobtest NOGUI fileindexingjobtest.cpp
+                                             ../../fileindexingjob.cpp)
+
+target_link_libraries(fileindexingjobtest
+  ${QT_QTTEST_LIBRARY}
+  ${KDE4_KDECORE_LIBS}
+  ${KFILEMETADATA_LIBRARY}
+  ${XAPIAN_LIBRARIES}
+)
diff --git a/src/file/autotest/fileindexingjob/extractor.cpp b/src/file/autotest/fileindexingjob/extractor.cpp
new file mode 100644
index 0000000..949fc8f
--- /dev/null
+++ b/src/file/autotest/fileindexingjob/extractor.cpp
@@ -0,0 +1,75 @@
+/*
+ * This file is part of the KDE Baloo Project
+ * Copyright (C) 2014  Vishesh Handa <me@vhanda.in>
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) version 3, or any
+ * later version accepted by the membership of KDE e.V. (or its
+ * successor approved by the membership of KDE e.V.), which shall
+ * act as a proxy defined in Section 6 of version 3 of the license.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+
+#include <KAboutData>
+#include <KCmdLineArgs>
+#include <KLocale>
+#include <KComponentData>
+
+#include <QApplication>
+#include <QTextStream>
+#include <QDebug>
+
+#include <signal.h>
+#include <iostream>
+
+int main(int argc, char* argv[])
+{
+    KAboutData aboutData("baloo_file_extractor_dummy", 0, KLocalizedString(),
+                         "0.1", KLocalizedString());
+
+    KCmdLineArgs::init(argc, argv, &aboutData);
+
+    KCmdLineOptions options;
+    options.add("+[url]", KLocalizedString());
+
+    KCmdLineArgs::addCmdLineOptions(options);
+    const KCmdLineArgs* args = KCmdLineArgs::parsedArgs();
+
+    int argCount = args->count();
+    if (argCount == 0) {
+        QTextStream err(stderr);
+        err << "Must input url/id of the file to be indexed";
+
+        return 1;
+    }
+
+    KComponentData data(aboutData, KComponentData::RegisterAsMainComponent);
+
+    QByteArray arr = qgetenv("BALOO_EXTRACTOR_FAIL_FILE");
+    if (arr.isEmpty()) {
+        return 0;
+    }
+
+    QString failFile = QString::fromUtf8(arr);
+
+    for (int i = 0; i < args->count(); i++) {
+        QString fid = args->arg(i);
+        if (fid == failFile) {
+            // kill oneself
+            raise(SIGKILL);
+            return -1;
+        }
+    }
+
+    return 0;
+}
diff --git a/src/file/autotest/fileindexingjob/fileindexingjobtest.cpp b/src/file/autotest/fileindexingjob/fileindexingjobtest.cpp
new file mode 100644
index 0000000..57482c8
--- /dev/null
+++ b/src/file/autotest/fileindexingjob/fileindexingjobtest.cpp
@@ -0,0 +1,70 @@
+/*
+ * <one line to give the library's name and an idea of what it does.>
+ * Copyright (C) 2014  Vishesh Handa <me@vhanda.in>
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
+ *
+ */
+
+#include "fileindexingjobtest.h"
+#include "../../fileindexingjob.h"
+
+#include <QSignalSpy>
+#include <QTest>
+
+using namespace Baloo;
+
+void FileIndexingJobTest::init()
+{
+    // Set the correct path
+    QByteArray path = qgetenv("PATH");
+    path = QByteArray(BALOO_TEMP_PATH) + ":" + path;
+
+    setenv("PATH", path.constData(), 1);
+    unsetenv("BALOO_EXTRACTOR_FAIL_FILE");
+}
+
+void FileIndexingJobTest::testFileFail()
+{
+    QVector<uint> files;
+    files << 1 << 2 << 3 << 4 << 5 << 6;
+
+    putenv("BALOO_EXTRACTOR_FAIL_FILE=5");
+    FileIndexingJob* job = new FileIndexingJob(files);
+
+    QSignalSpy spy(job, SIGNAL(indexingFailed(uint)));
+    QVERIFY(job->exec());
+
+    QCOMPARE(spy.count(), 1);
+    QCOMPARE(spy.at(0).size(), 1);
+    QCOMPARE(spy.at(0).first().toUInt(), (uint)5);
+}
+
+void FileIndexingJobTest::testNormalExecution()
+{
+    QVector<uint> files;
+    files << 1 << 2 << 3 << 4 << 5 << 6;
+
+    FileIndexingJob* job = new FileIndexingJob(files);
+
+    QSignalSpy spy1(job, SIGNAL(indexingFailed(uint)));
+    QSignalSpy spy2(job, SIGNAL(finished(KJob*)));
+    QVERIFY(job->exec());
+
+    QCOMPARE(spy1.count(), 0);
+    QCOMPARE(spy2.count(), 1);
+}
+
+QTEST_MAIN(FileIndexingJobTest);
diff --git a/src/file/autotest/fileindexingjob/fileindexingjobtest.h b/src/file/autotest/fileindexingjob/fileindexingjobtest.h
new file mode 100644
index 0000000..100d300
--- /dev/null
+++ b/src/file/autotest/fileindexingjob/fileindexingjobtest.h
@@ -0,0 +1,40 @@
+/*
+ * <one line to give the library's name and an idea of what it does.>
+ * Copyright (C) 2014  Vishesh Handa <me@vhanda.in>
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
+ *
+ */
+
+#ifndef BALOO_FILEINDEXINGJOBTEST_H
+#define BALOO_FILEINDEXINGJOBTEST_H
+
+#include <QObject>
+
+namespace Baloo {
+
+class FileIndexingJobTest : public QObject
+{
+    Q_OBJECT
+
+private Q_SLOTS:
+    void init();
+
+    void testNormalExecution();
+    void testFileFail();
+};
+}
+
+#endif // BALOO_FILEINDEXINGJOBTEST_H
-- 
1.9.1

